{"name": "test_callib_dupl_intents", "status": "broken", "statusDetails": {"message": "RuntimeError: Error in Calibrater::correct.", "trace": "casatasks/test_task_applycal.py:626: in test_callib_dupl_intents\n    applycal(vis=clDuplIntentsMS,scan='',intent='*CAL*,*OBS*',\ncasa-6.7.2-15-py3.12.el8/lib/py/lib/python3.12/site-packages/casatasks/applycal.py:279: in __call__\n    task_result = _applycal_t( _pc.document['vis'], _pc.document['field'], _pc.document['spw'], _pc.document['intent'], _pc.document['selectdata'], _pc.document['timerange'], _pc.document['uvrange'], _pc.document['antenna'], _pc.document['scan'], _pc.document['observation'], _pc.document['msselect'], _pc.document['docallib'], _pc.document['callib'], _pc.document['gaintable'], _pc.document['gainfield'], _pc.document['interp'], _pc.document['spwmap'], _pc.document['calwt'], _pc.document['parang'], _pc.document['applymode'], _pc.document['flagbackup'] )\ncasa-6.7.2-15-py3.12.el8/lib/py/lib/python3.12/site-packages/casatasks/private/task_applycal.py:177: in applycal\n    mycb.correct(applymode)\ncasa-6.7.2-15-py3.12.el8/lib/py/lib/python3.12/site-packages/casatools/calibrater.py:493: in correct\n    return self._swigobj.correct(applymode)\ncasa-6.7.2-15-py3.12.el8/lib/py/lib/python3.12/site-packages/casatools/__casac__/calibrater.py:1168: in correct\n    return _calibrater.calibrater_correct(self, *args, **kwargs)\nE   RuntimeError: Error in Calibrater::correct."}, "description": "\n        For CAS-14409, introduce test of callibrary specified in different ways, but to achieve\n        the same thing.   We copy 2 spws from gaincaltest2.ms, and adjust the intents (defintent) \n        to be more typically ALMA-like; multiple redundant intents (e.g., many OBSERVE_TARGET intents\n        in separate STATE_IDs) is a prerequisite for tickling the bug reported in CAS-14409, which\n        was caused by effectively non-unique matching of data encountered in applycal with the\n        keys used to index different slices of calibration specified by the cal library.\n        \n        In CAS-14409, a (WARN) log message has also been introduced to help users recognize when\n        calibration application encounters data not explicitly or implicitly catered for in the\n        net cal library (per caltable).  This is a supported feature (such data should pass \n        uncorrected by the caltable so specified), but it was thought desirable to have a more \n        explicit acknowledgment in the logger that some data wasn't corrected.\n\n        ", "attachments": [{"name": "stdout", "source": "e0589536-02ca-4d07-ab3d-9fb13fe07b98-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "10184d12-1ff6-40f1-af06-3114c3ec1e07-attachment.txt", "type": "text/plain"}], "start": 1758035478093, "stop": 1758035484394, "uuid": "86cd0a06-ec57-4562-b5cf-10aa70f12b85", "historyId": "b949e73a990a31c21844730d9ea33978", "testCaseId": "b949e73a990a31c21844730d9ea33978", "fullName": "casatasks.test_task_applycal.applycal_test#test_callib_dupl_intents", "labels": [{"name": "parentSuite", "value": "casatasks"}, {"name": "suite", "value": "test_task_applycal"}, {"name": "subSuite", "value": "applycal_test"}, {"name": "host", "value": "casa-rockylinux8-amd64-perf07"}, {"name": "thread", "value": "597558-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "casatasks.test_task_applycal"}], "titlePath": ["casatasks", "test_task_applycal.py", "applycal_test"]}