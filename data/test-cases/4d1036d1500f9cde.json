{"uid":"4d1036d1500f9cde","name":"test_callib_dupl_intents","fullName":"casatasks.test_task_applycal.applycal_test#test_callib_dupl_intents","historyId":"b949e73a990a31c21844730d9ea33978","time":{"start":1758035478093,"stop":1758035484394,"duration":6301},"description":"\n        For CAS-14409, introduce test of callibrary specified in different ways, but to achieve\n        the same thing.   We copy 2 spws from gaincaltest2.ms, and adjust the intents (defintent) \n        to be more typically ALMA-like; multiple redundant intents (e.g., many OBSERVE_TARGET intents\n        in separate STATE_IDs) is a prerequisite for tickling the bug reported in CAS-14409, which\n        was caused by effectively non-unique matching of data encountered in applycal with the\n        keys used to index different slices of calibration specified by the cal library.\n        \n        In CAS-14409, a (WARN) log message has also been introduced to help users recognize when\n        calibration application encounters data not explicitly or implicitly catered for in the\n        net cal library (per caltable).  This is a supported feature (such data should pass \n        uncorrected by the caltable so specified), but it was thought desirable to have a more \n        explicit acknowledgment in the logger that some data wasn't corrected.\n\n        ","descriptionHtml":"<pre><code>    For CAS-14409, introduce test of callibrary specified in different ways, but to achieve\n    the same thing.   We copy 2 spws from gaincaltest2.ms, and adjust the intents (defintent) \n    to be more typically ALMA-like; multiple redundant intents (e.g., many OBSERVE_TARGET intents\n    in separate STATE_IDs) is a prerequisite for tickling the bug reported in CAS-14409, which\n    was caused by effectively non-unique matching of data encountered in applycal with the\n    keys used to index different slices of calibration specified by the cal library.\n    \n    In CAS-14409, a (WARN) log message has also been introduced to help users recognize when\n    calibration application encounters data not explicitly or implicitly catered for in the\n    net cal library (per caltable).  This is a supported feature (such data should pass \n    uncorrected by the caltable so specified), but it was thought desirable to have a more \n    explicit acknowledgment in the logger that some data wasn't corrected.\n</code></pre>\n","status":"broken","statusMessage":"RuntimeError: Error in Calibrater::correct.","statusTrace":"casatasks/test_task_applycal.py:626: in test_callib_dupl_intents\n    applycal(vis=clDuplIntentsMS,scan='',intent='*CAL*,*OBS*',\ncasa-6.7.2-15-py3.12.el8/lib/py/lib/python3.12/site-packages/casatasks/applycal.py:279: in __call__\n    task_result = _applycal_t( _pc.document['vis'], _pc.document['field'], _pc.document['spw'], _pc.document['intent'], _pc.document['selectdata'], _pc.document['timerange'], _pc.document['uvrange'], _pc.document['antenna'], _pc.document['scan'], _pc.document['observation'], _pc.document['msselect'], _pc.document['docallib'], _pc.document['callib'], _pc.document['gaintable'], _pc.document['gainfield'], _pc.document['interp'], _pc.document['spwmap'], _pc.document['calwt'], _pc.document['parang'], _pc.document['applymode'], _pc.document['flagbackup'] )\ncasa-6.7.2-15-py3.12.el8/lib/py/lib/python3.12/site-packages/casatasks/private/task_applycal.py:177: in applycal\n    mycb.correct(applymode)\ncasa-6.7.2-15-py3.12.el8/lib/py/lib/python3.12/site-packages/casatools/calibrater.py:493: in correct\n    return self._swigobj.correct(applymode)\ncasa-6.7.2-15-py3.12.el8/lib/py/lib/python3.12/site-packages/casatools/__casac__/calibrater.py:1168: in correct\n    return _calibrater.calibrater_correct(self, *args, **kwargs)\nE   RuntimeError: Error in Calibrater::correct.","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_applycal_test","time":{"start":1758035451424,"stop":1758035451520,"duration":96},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        For CAS-14409, introduce test of callibrary specified in different ways, but to achieve\n        the same thing.   We copy 2 spws from gaincaltest2.ms, and adjust the intents (defintent) \n        to be more typically ALMA-like; multiple redundant intents (e.g., many OBSERVE_TARGET intents\n        in separate STATE_IDs) is a prerequisite for tickling the bug reported in CAS-14409, which\n        was caused by effectively non-unique matching of data encountered in applycal with the\n        keys used to index different slices of calibration specified by the cal library.\n        \n        In CAS-14409, a (WARN) log message has also been introduced to help users recognize when\n        calibration application encounters data not explicitly or implicitly catered for in the\n        net cal library (per caltable).  This is a supported feature (such data should pass \n        uncorrected by the caltable so specified), but it was thought desirable to have a more \n        explicit acknowledgment in the logger that some data wasn't corrected.\n\n        ","status":"broken","statusMessage":"RuntimeError: Error in Calibrater::correct.","statusTrace":"casatasks/test_task_applycal.py:626: in test_callib_dupl_intents\n    applycal(vis=clDuplIntentsMS,scan='',intent='*CAL*,*OBS*',\ncasa-6.7.2-15-py3.12.el8/lib/py/lib/python3.12/site-packages/casatasks/applycal.py:279: in __call__\n    task_result = _applycal_t( _pc.document['vis'], _pc.document['field'], _pc.document['spw'], _pc.document['intent'], _pc.document['selectdata'], _pc.document['timerange'], _pc.document['uvrange'], _pc.document['antenna'], _pc.document['scan'], _pc.document['observation'], _pc.document['msselect'], _pc.document['docallib'], _pc.document['callib'], _pc.document['gaintable'], _pc.document['gainfield'], _pc.document['interp'], _pc.document['spwmap'], _pc.document['calwt'], _pc.document['parang'], _pc.document['applymode'], _pc.document['flagbackup'] )\ncasa-6.7.2-15-py3.12.el8/lib/py/lib/python3.12/site-packages/casatasks/private/task_applycal.py:177: in applycal\n    mycb.correct(applymode)\ncasa-6.7.2-15-py3.12.el8/lib/py/lib/python3.12/site-packages/casatools/calibrater.py:493: in correct\n    return self._swigobj.correct(applymode)\ncasa-6.7.2-15-py3.12.el8/lib/py/lib/python3.12/site-packages/casatools/__casac__/calibrater.py:1168: in correct\n    return _calibrater.calibrater_correct(self, *args, **kwargs)\nE   RuntimeError: Error in Calibrater::correct.","steps":[],"attachments":[{"uid":"eeb7e65f2f99a6fc","name":"stdout","source":"eeb7e65f2f99a6fc.txt","type":"text/plain","size":559},{"uid":"cffa29fe15073598","name":"stderr","source":"cffa29fe15073598.txt","type":"text/plain","size":746}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"_unittest_setUpClass_fixture_applycal_test::0","time":{"start":1758035617297,"stop":1758035617387,"duration":90},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"casatasks"},{"name":"suite","value":"test_task_applycal"},{"name":"subSuite","value":"applycal_test"},{"name":"host","value":"casa-rockylinux8-amd64-perf07"},{"name":"thread","value":"597558-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"casatasks.test_task_applycal"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"adcdc2e0be3ba02d","status":"broken","statusDetails":"RuntimeError: Error in Calibrater::correct.","time":{"start":1758035478093,"stop":1758035484394,"duration":6301}}]},"tags":[]},"source":"4d1036d1500f9cde.json","parameterValues":[]}