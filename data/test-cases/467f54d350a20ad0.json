{"uid":"467f54d350a20ad0","name":"test_vlass_1p1_row_pcorr1_oneint","fullName":"stakeholder.test_stk_vlass_pipeline_imaging.Test_vlass_1p1_row#test_vlass_1p1_row_pcorr1_oneint","historyId":"c3450fae3a84cc872f01f605eea952f9","time":{"start":1758128371748,"stop":1758128542276,"duration":170528},"description":"\n        ---------------------------------------------------------------------------------------------------------------------------------------------\n        VLASS 1.1 :  Corrections for antenna-groups (new/old ACUs). psd = [30,300]\n                           Image each OTF field separately (to make a scan plot)\n                           Use mtmfs with conjbeams True and test pb-corrected intensity and spectral index.\n                           Image only one integration (first one per scan).\n\n        Test that the intensity and spectral index are correct.  \n        This tests the antenna clustering using just one timestep of data (i.e. no time-dependent errors)\n\n        [ If the second timestep is included (or chosen) the slope re-appears\n           because with psf=[x,300], the pointing offset is read only from the first timestep in a VLASS scan. ]\n        ---------------------------------------------------------------------------------------------------------------------------------------------\n        ","descriptionHtml":"<pre><code>    ---------------------------------------------------------------------------------------------------------------------------------------------\n    VLASS 1.1 :  Corrections for antenna-groups (new/old ACUs). psd = [30,300]\n                       Image each OTF field separately (to make a scan plot)\n                       Use mtmfs with conjbeams True and test pb-corrected intensity and spectral index.\n                       Image only one integration (first one per scan).\n\n    Test that the intensity and spectral index are correct.  \n    This tests the antenna clustering using just one timestep of data (i.e. no time-dependent errors)\n\n    [ If the second timestep is included (or chosen) the slope re-appears\n       because with psf=[x,300], the pointing offset is read only from the first timestep in a VLASS scan. ]\n    ---------------------------------------------------------------------------------------------------------------------------------------------\n</code></pre>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_Test_vlass_1p1_row","time":{"start":1758127278581,"stop":1758127278581,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        ---------------------------------------------------------------------------------------------------------------------------------------------\n        VLASS 1.1 :  Corrections for antenna-groups (new/old ACUs). psd = [30,300]\n                           Image each OTF field separately (to make a scan plot)\n                           Use mtmfs with conjbeams True and test pb-corrected intensity and spectral index.\n                           Image only one integration (first one per scan).\n\n        Test that the intensity and spectral index are correct.  \n        This tests the antenna clustering using just one timestep of data (i.e. no time-dependent errors)\n\n        [ If the second timestep is included (or chosen) the slope re-appears\n           because with psf=[x,300], the pointing offset is read only from the first timestep in a VLASS scan. ]\n        ---------------------------------------------------------------------------------------------------------------------------------------------\n        ","status":"passed","steps":[],"attachments":[{"uid":"e7d4b9a1f91addf8","name":"stdout","source":"e7d4b9a1f91addf8.txt","type":"text/plain","size":1076},{"uid":"8a16421118faec10","name":"stderr","source":"8a16421118faec10.txt","type":"text/plain","size":2607}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"_unittest_setUpClass_fixture_Test_vlass_1p1_row::0","time":{"start":1758128915978,"stop":1758128915978,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"stakeholder"},{"name":"suite","value":"test_stk_vlass_pipeline_imaging"},{"name":"subSuite","value":"Test_vlass_1p1_row"},{"name":"host","value":"casa-rockylinux8-amd64-perf07"},{"name":"thread","value":"2091800-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"stakeholder.test_stk_vlass_pipeline_imaging"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":2,"unknown":0,"total":2},"items":[{"uid":"a0e20005ba08db5a","status":"passed","time":{"start":1758128371748,"stop":1758128542276,"duration":170528}}]},"tags":[]},"source":"467f54d350a20ad0.json","parameterValues":[]}